name: GitHub Actions
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
#  init-frontend:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [ 18.x ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Staring Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: ls
#        run: ls
#      - name: install modules
#        run: npm install --prefix ./frontend/
#      - name: build project
#        run: npm run build --prefix ./frontend/
#      - name: project test
#        run: npm run test --prefix ./frontend/
  init-postgres:
    runs-on: ubuntu-latest
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: slaves_db
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client
      - name: psql -U postgres
        run: psql -U postgres
      - name: psql \l
        run: psql \l
      - name: Query database
        run: psql -h postgres -d slaves_db -U postgres -c 'SELECT 1;'
        env:
          PGPASSWORD: password
#  init-backend:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        java-version: [ 17 ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK ${{ matrix.java-version }}
#        uses: actions/setup-java@v3
#        with:
#          java-version: ${{ matrix.java-version }}
#          distribution: 'temurin'
#      - name: Build with Maven
#        run: mvn --batch-mode --update-snapshots package
##          run: mvn --batch-mode -U -T 1C clean test
#  docker-up:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Docker compose
#        run: docker-compose up -d --build